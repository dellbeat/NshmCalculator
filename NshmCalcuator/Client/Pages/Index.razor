@page "/"
@using NshmCalculator.Shared
@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage

<PageTitle>逆水寒手游属性计算器</PageTitle>
<ValidateForm @ref="ValidateForm" Model="@_info" OnValidSubmit="@Calculate">
    <Divider Text="玩家基础数值" Alignment="Alignment.Center"/>
    <div class="row g-3">
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="基础攻击"/>
                <BootstrapInput @bind-Value="@_info.PlayerBaseAttack"/>
            </BootstrapInputGroup>
        </div>
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="基础克制"/>
                <BootstrapInput @bind-Value="@_info.PlayerBaseRestraint"/>
            </BootstrapInputGroup>
        </div>
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="基础属性攻击"/>
                <BootstrapInput @bind-Value="@_info.PlayerBaseElementAttack"/>
            </BootstrapInputGroup>
        </div>
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="基础破防"/>
                <BootstrapInput @bind-Value="@_info.PlayerBaseBreakDefense"/>
            </BootstrapInputGroup>
        </div>
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="基础命中"/>
                <BootstrapInput @bind-Value="@_info.PlayerBaseHit"/>
            </BootstrapInputGroup>
        </div>
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="基础会心"/>
                <BootstrapInput @bind-Value="@_info.PlayerBaseCriticalHits"/>
            </BootstrapInputGroup>
        </div>
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="基础会伤(%)"/>
                <BootstrapInput @bind-Value="@_info.PlayerBaseCriticalRate"/>
                @* <BootstrapInputGroupLabel DisplayText="%"/> *@
            </BootstrapInputGroup>
        </div>
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="周天会心率(%)"/>
                <BootstrapInput @bind-Value="@_info.PlayerBaseZtCriticalHitsRate"/>
                @* <BootstrapInputGroupLabel DisplayText="%"/> *@
            </BootstrapInputGroup>
        </div>
    </div>
    <Divider Text="敌方数值" Alignment="Alignment.Center"/>
    <div class="row g-3">
        <div class="col-6 col-lg-6 col-sm-6">
            <BootstrapInputGroup >
                <BootstrapInputGroupLabel DisplayText="敌方防御"/>
                <BootstrapInput @bind-Value="@_info.EnemyDefense"/>
            </BootstrapInputGroup>
        </div>
        <div class="col-6 col-lg-6 col-sm-6">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="敌方格挡"/>
                <BootstrapInput @bind-Value="@_info.EnemyBlock"/>
            </BootstrapInputGroup>
        </div>
        <div class="col-12" style="text-align: center">
            <BootstrapLabel Value="满命中："/>
            <BootstrapLabel Value="@_info.FullHit.ToString()"/>
        </div>
    </div>
    <Divider Text="玩家新增数值" Alignment="Alignment.Center"/>
    <div class="row g-3">
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="新增攻击"/>
                <BootstrapInput @bind-Value="@_info.IncreaseAttack"/>
            </BootstrapInputGroup>
        </div>
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="新增克制"/>
                <BootstrapInput @bind-Value="@_info.IncreaseRestraint"/>
            </BootstrapInputGroup>
        </div>
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="新增属性攻击"/>
                <BootstrapInput @bind-Value="@_info.IncreaseElementAttack"/>
            </BootstrapInputGroup>
        </div>
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="新增破防"/>
                <BootstrapInput @bind-Value="@_info.IncreaseBreakDefense"/>
            </BootstrapInputGroup>
        </div>
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="新增命中"/>
                <BootstrapInput @bind-Value="@_info.IncreaseHit"/>
            </BootstrapInputGroup>
        </div>
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="新增会心"/>
                <BootstrapInput @bind-Value="@_info.IncreaseCriticalHits"/>
            </BootstrapInputGroup>
        </div>
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="新增会伤率(%)"/>
                <BootstrapInput @bind-Value="@_info.IncreaseCriticalRate"/>
            </BootstrapInputGroup>
        </div>
        <div class="col-12" style="text-align:center">
            <Button ButtonType="@ButtonType.Submit" Text="计算"></Button>
        </div>
        <div class="col-12" style="text-align: center">
            <BootstrapLabel Value="增伤百分比："/>
            <BootstrapLabel Value="@_info.Result.ToString("P3")"/>
        </div>
        <div class="col-12" style="text-align: center">
            <BootstrapLabel Value="@LastTimeStr"/>
        </div>
    </div>
</ValidateForm>


@code {
    private PlayerInfo _info = new();
    private ValidateForm? ValidateForm { get; set; }

    private string? LastTimeStr
    {
        get => _info.LastCalTime == null ? null : $"上次计算时间:{(((DateTime)_info.LastCalTime).ToString("yyyy-MM-dd HH:mm:ss"))}";
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        GetInfo();
    }

    private void SaveInfo()
    {
        localStorage.SetItem("info", _info);
    }

    private void GetInfo()
    {
        _info = localStorage.GetItem<PlayerInfo>("info") ?? new();
    }

    private Task Calculate(EditContext context)
    {
        if (_info.PlayerBaseHit > _info.FullHit)
        {
            ValidateForm?.SetError(nameof(_info.PlayerBaseHit), "基础命中不能大于满命中值");
        }
        else if (_info.IncreaseHit > _info.FullHit)
        {
            ValidateForm?.SetError(nameof(_info.IncreaseHit), "新增命中不能大于满命中值");
        }
        else if (_info.PlayerBaseHit + _info.IncreaseHit > _info.FullHit)
        {
            ValidateForm?.SetError(nameof(_info.IncreaseHit), "基础命中与新增命中之和不能大于满命中");
        }
        else
        {
            int defenseSubBase = _info.EnemyDefense - _info.PlayerBaseBreakDefense >= 0 ? _info.EnemyDefense - _info.PlayerBaseBreakDefense : 0; //由于破防超过防御部分无收益，故对破防数值进行预计算
            int defenseSubFull = _info.EnemyDefense - _info.PlayerBaseBreakDefense - _info.IncreaseBreakDefense >= 0 ? _info.EnemyDefense - _info.PlayerBaseBreakDefense - _info.IncreaseBreakDefense : 0;

            double b1 = (115 * _info.PlayerBaseCriticalHits + 90) * 1.0 / (_info.PlayerBaseCriticalHits + 940) / 100 + _info.PlayerBaseZtCriticalHitsRate * 1.0 / 100;
            double b2 = (95 + 143 * _info.PlayerBaseHit * 1.0 / (_info.PlayerBaseHit + 713) - 143 * _info.EnemyBlock * 1.0 / (_info.EnemyBlock + 713)) / 100;
            double b3 = (115 * (_info.PlayerBaseCriticalHits + _info.IncreaseCriticalHits) + 90) * 1.0 / (_info.PlayerBaseCriticalHits + _info.IncreaseCriticalHits + 940) / 100 + _info.PlayerBaseZtCriticalHitsRate * 1.0 / 100;
            double b4 = (95 + 143 * (_info.PlayerBaseHit + _info.IncreaseHit) * 1.0 / (_info.PlayerBaseHit + _info.IncreaseHit + 713) - 143 * _info.EnemyBlock * 1.0 / (_info.EnemyBlock + 713)) / 100;
            double b5 = b4 - b2;
            double b6 = (b2 * (1 + b3 * (_info.PlayerBaseCriticalRate * 1.0 / 100 - 1)) + 0.5 - b2 / 2) / (b2 * (1 + b1 * (_info.PlayerBaseCriticalRate * 1.0 / 100 - 1)) + 0.5 - b2 / 2) - 1;
            double b7 = (2 * b5 * b1 * (_info.PlayerBaseCriticalRate * 1.0 / 100 - 1) + b5) / (2 * b2 * b1 * (_info.PlayerBaseCriticalRate * 1.0 / 100 - 1) + b2 + 1);
            double b8 = (2860 + _info.EnemyDefense) * 1.0 / (2860 + defenseSubBase);
            double b9 = (_info.PlayerBaseAttack + _info.PlayerBaseRestraint + 920) * 2860 * 1.0 / (2860 + defenseSubBase) + _info.PlayerBaseElementAttack;
            double b10 = ((_info.IncreaseAttack + _info.IncreaseRestraint) * 2860 * 1.0 / (2860 + defenseSubBase) + _info.IncreaseElementAttack) / b9;
            double b12 = ((_info.PlayerBaseAttack + _info.PlayerBaseRestraint + 920) * 2860 * 1.0 / (2860 + defenseSubBase) *
                          (2860 + defenseSubBase) / (2860 + defenseSubFull) + _info.PlayerBaseElementAttack) / b9 - 1;
            double b13 = (b2 * (1 + b1 * (_info.PlayerBaseCriticalRate * 1.0 / 100 + _info.IncreaseCriticalRate * 1.0 / 100 - 1)) + 0.5 - b2 / 2) / (b2 * (1 + b1 * (_info.PlayerBaseCriticalRate * 1.0 / 100 - 1)) + 0.5 - b2 / 2) - 1;

            _info.Result = ((b6 + 1) * (b7 + 1) * (1 + b10) * (1 + b12) * (1 + b13) - 1);
            _info.LastCalTime = DateTime.Now;
        }

        SaveInfo();

        return Task.CompletedTask;
    }

}