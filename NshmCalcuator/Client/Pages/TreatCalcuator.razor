@page "/treat"
@using NshmCalculator.Shared
@using Console = System.Console
@inject ISyncLocalStorageService LocalStorage
@inject ToastService ToastService

<PageTitle>素问治疗量计算器</PageTitle>
<ValidateForm @ref="ValidateForm" Model="@_info" OnValidSubmit="@Calculate">
    <Divider Text="玩家基础数值" Alignment="Alignment.Center" />
    <div class="row g-3">
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="基础治疗(%)" />
                <BootstrapInput @bind-Value="@_info.PlayerBaseTreatPercent" />
            </BootstrapInputGroup>
        </div>
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="基础攻击" />
                <BootstrapInput @bind-Value="@_info.PlayerBaseAttack" />
            </BootstrapInputGroup>
        </div>
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="基础会心" />
                <BootstrapInput @bind-Value="@_info.PlayerBaseCriticalHits" />
            </BootstrapInputGroup>
        </div>
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="基础会伤(%)" />
                <BootstrapInput @bind-Value="@_info.PlayerBaseCriticalRate" />
            </BootstrapInputGroup>
        </div>
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="治疗会伤" />
                <BootstrapInput @bind-Value="@_info.PlayerBaseTreatCriticalRate" />
            </BootstrapInputGroup>
        </div>
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="周天会心率(%)" />
                <BootstrapInput @bind-Value="@_info.PlayerBaseZtCriticalHitsRate" />
            </BootstrapInputGroup>
        </div>
    </div>
    <Divider Text="玩家新增数值" Alignment="Alignment.Center" />
    <div class="row g-3">
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <Tooltip Title="输入面板实际新增加攻击"  Placement="Placement.Top" Trigger="Click">
                    <BootstrapInputGroupLabel DisplayText="新增攻击*" />
                </Tooltip>
                <BootstrapInput @bind-Value="@_info.IncreaseAttack" />
            </BootstrapInputGroup>
        </div>
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="新增会心" />
                <BootstrapInput @bind-Value="@_info.IncreaseCriticalHits"/>
            </BootstrapInputGroup>
        </div>
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <BootstrapInputGroupLabel DisplayText="新增会伤率(%)" />
                <BootstrapInput @bind-Value="@_info.IncreaseCriticalRate" />
            </BootstrapInputGroup>
        </div>
        <div class="col-6 col-md-3">
            <BootstrapInputGroup>
                <Tooltip Title="计算金周天增加会心率的治疗提升" Placement="Placement.Top" Trigger="Click">
                    <BootstrapInputGroupLabel DisplayText="新增会心率(%)*"/>
                </Tooltip>
                <BootstrapInput @bind-Value="@_info.IncreaseZtCriticalRate"/>
            </BootstrapInputGroup>
        </div>
        <div class="col-12" style="text-align:center">
            <Button ButtonType="@ButtonType.Submit" Text="计算"></Button>
        </div>
        <div class="col-12" style="text-align: center">
            <BootstrapLabel Value="治疗增加百分比：" />
            <Tag Color="Color.Primary">
                @_info.Result.ToString("P2")
            </Tag>
        </div>
    </div>
</ValidateForm>

@code {
    private TreatPlayerInfo _info = new();

    private ValidateForm? ValidateForm { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        GetInfo();
    }

    private void SaveInfo()
    {
        LocalStorage.SetItem("_treatInfo", _info);
    }

    private void GetInfo()
    {
        _info = LocalStorage.GetItem<TreatPlayerInfo>("_treatInfo") ?? new();
    }

    private readonly ToastOption _warningOption = new ToastOption()
        {
            Category = ToastCategory.Warning,
            IsAutoHide = false,
            Title = "Notification",
            Content = "计算进程出现异常，建议检查输入内容；如有必要可与作者联系"
        };

    private Task Calculate(EditContext context)
    {
        try
        {
            double a = (100 * _info.PlayerBaseCriticalHits + 30) * 1.0 / (_info.PlayerBaseCriticalHits + 1880) * 1.0 / 100 + _info.PlayerBaseZtCriticalHitsRate / 100.0;
            double b = (100 * (_info.PlayerBaseCriticalHits + _info.IncreaseCriticalHits) + 30) * 1.0 / (_info.PlayerBaseCriticalHits + _info.IncreaseCriticalHits + 1880) * 1.0 / 100 + _info.PlayerBaseZtCriticalHitsRate / 100.0 + _info.IncreaseZtCriticalRate / 100.0;
            double c = (1 + b * (_info.PlayerBaseTreatCriticalRate / 100.0 - 1)) / (1 + a * (_info.PlayerBaseTreatCriticalRate / 100.0 - 1)) - 1;
            double d = (1 + b * (_info.PlayerBaseTreatCriticalRate / 100.0 + _info.IncreaseCriticalRate / 100.0 / 2 - 1)) / (1 + b * (_info.PlayerBaseTreatCriticalRate / 100.0 - 1)) - 1;
            int e = _info.PlayerBaseAttack + 920;
            double f = _info.IncreaseAttack * 1.0 / e;

            _info.Result = (f + 1) * (c + 1) * (d + 1) - 1;

            SaveInfo();
        }
        catch (Exception e)
        {
            ToastService.Show(_warningOption);
        }

        return Task.CompletedTask;
    }
}
